#!/bin/bash
#
action=$1

# now shift the positional parameters to the right, past
# the plug-in action, so that they can be pasted to the
# built-in actions.
#
shift

[ "$action" = "usage" ] && {
    sed -e 's/^    //' <<EndUsage
      did "THING I ALREADY DID +project @context"
      did 2009-03-04 "THING I ALREADY DID +project @context"
      did 3-04 "THING I ALREADY DID +project @context"
      did 4 "THING I ALREADY DID +project @context"
        Adds THING I ALREADY DID to your done.txt file.
        If no date is specified, current date is used.
        You can specify the date as YYYY-MM-DD, or MM-DD,
        or DD; if a short form is used and is greater than
        the current MM-DD or DD, then prior YYYY or MM is
        assumed. (So if today was 2009-03-04 and you specified
        27, then did2 will assign a done date of 2009-02-27.)
EndUsage
  exit
}

# see if a date was supplied
#
OVERRIDE_DATE_=false
DID_DATE_=`date +%F`
DID_YYYY_=$(echo $DID_DATE_ | sed 's/\([0-9]*\)-[0-9]*-[0-9]*/\1/g')
DID_MM_=$(echo $DID_DATE_ | sed 's/[0-9]*-\([0-9]*\)-[0-9]*/\1/g')
DID_DD_=$(echo $DID_DATE_ | sed 's/[0-9]*-[0-9]*-\([0-9]\)*/\1/g')
if echo "$1" | grep ^[0-9]\{4\}-[0-9]\{1,2\}-[0-9]\{1,2\}$ ; then
    OVERRIDE_DATE_=true
    DID_DATE_=`date +%F --date "$1"`
elif echo "$1" | grep ^[0-9]\{1,2\}-[0-9]\{1,2\}$ ; then
    OVERRIDE_DATE_=true
    ALT_YYYY_=${DID_YYYY_}
    echo "B4: ALT_YYYY_ = $ALT_YYYY_"
    ALT_MM_=$(echo $1 | sed 's/\([0-9]*\)-[0-9]*/\1/g')
    ALT_DD_=$(echo $1 | sed 's/[0-9]*-\([0-9]*\)/\1/g')
    if [ $ALT_MM_ -gt $DID_MM_ ]; then
        ALT_YYYY_=$((DID_YYYY_ - 1))
    fi
    DID_DATE_=`date +%F --date "$ALT_YYYY_-$ALT_MM_-$ALT_DD_"`
elif echo "$1" | grep ^[0-9]\{1,2\}$ ; then
    OVERRIDE_DATE_=true
    ALT_YYYY_=$DID_YYYY_
    ALT_MM_=$DID_MM_
    ALT_DD_=$(echo $1 | sed 's/\([0-9]*\)/\1/g')
    if [ $ALT_DD_ -gt $DID_DD_ ]; then
        ALT_MM_=$(date +%F --date "-$DID_DD_ days" \
               | sed 's/[0-9]*-\([0-9]*\)-[0-9]*/\1/g')
    fi
    DID_DATE_=`date +%F --date "$ALT_YYYY_-$ALT_MM_-$ALT_DD_"`
fi
if [ x$DID_DATE_ == x ]; then
  exit
elif $OVERRIDE_DATE_ ; then
  shift
fi

# try to add the item
#
if "$TODO_SH" command add "$@"; then

    # getting the number item: 
    # it's simply the last item added to the file
    #
    line=`wc -l "$TODOTXT_TODO_FILE" | sed "s/^[[:space:]]*//" | cut -d' ' -f1`

    # now mark the item done
    #
    if "$TODO_SH" command do $line; then
        if $OVERRIDE_DATE_ && [ $TODOTXT_AUTO_ARCHIVE = 1 ]; then
            # adjust done.txt
            [ $TODOTXT_VERBOSE -gt 0 ] && echo \
                "TODO: Adjusting $line to $DID_DATE_"
        elif $OVERRIDE_DATE_ ; then
            # adjust todo.txt
            [ $TODOTXT_VERBOSE -gt 0 ] && echo \
                "TODO: Adjusting $line to $DID_DATE_"
            sed -i.bak $line"s|^x [0-9]\{4\}-[0-9]\{1,2\}-[0-9]\{1,2\}[[:space:]]|x $DID_DATE_ |" "$TODOTXT_TODO_FILE"
        fi
    fi
fi

